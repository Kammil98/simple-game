package Game.JPanels;


import Game.Frames.GameWindow;
import Avatars.Avatar;
import Avatars.Direction;
import Avatars.Skeleton;
import Avatars.Zombie;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kamil_2
 */
public class Arena extends PartOfMap{
    /**
     * Creates new form Arena
     */
    public Arena() {
        super();
        getAvatarsOnMap().add(new Skeleton(new Dimension(1000, 700)));
        getAvatarsOnMap().add(new Zombie(new Dimension(1000, 700)));
        getAvatarsOnMap().forEach((Avatar avatar) -> {
            avatar.setEnemies(GameWindow.heroes);
            //new Thread(avatar).start();
        });
    }
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g, Color.GRAY);
        Graphics2D g2d = (Graphics2D) g;
        drawBorders(g2d, true, true, true, false);
        g2d.dispose();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public PartOfMap getPlaceBehindDoors(Direction doors) {
        if(System.currentTimeMillis() - getLastDoorsUsage() < getDoorsCD())
            return null;
        setLastDoorsUsage(System.currentTimeMillis());
        switch(doors){
            case LEFT: 
                GameWindow.myHero.setPosition(getSize().width, getSize().height/2);
                return (PartOfMap) GameWindow.getCity();
            default:
                return null;
        }
    }





    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
